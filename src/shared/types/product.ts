interface Translations {
  [key: string]: string;
}

interface FavoritesStats {
  count: number;
  displayedCount: string;
}

interface WholesalePrice {
  quantity: number;
  price: number;
}

interface ProductOption {
  type: string;
  name: string;
  nameTranslated: Translations;
  choices: ProductOptionChoice[];
  defaultChoice: number;
  required: boolean;
}

interface ShippingSettings {
  type: string;
  methodMarkup: number;
  flatRate: number;
  disabledMethods: string[];
  enabledMethods: string[];
}

interface OriginalImage {
  url: string;
  width: number;
  height: number;
}

interface GalleryImages {
  id: number;
  url: string;
  thumbnail: string;
  originalImageUrl: string;
  imageUrl: string;
  hdThumbnailUrl: string;
  thumbnailUrl: string;
  smallThumbnailUrl: string;
  width: number;
  height: number;
  orderBy: number;
  borderInfo: BorderInfo[];
}

interface BorderInfo {
  dominatingColor: DominatingColor[];
  homogeneity: boolean;
}

interface DominatingColor {
  red: number;
  green: number;
  blue: number;
  alpha: number;
}

interface ProductMedia {
  images: ProductImage[];
  videos: ProductVideo[];
}

interface ProductImage {
  id: string;
  alt: ProductImageAlt;
  orderBy: number;
  isMain: boolean;
  image160pxUrl: string;
  image400pxUrl: string;
  image800pxUrl: string;
  image1500pxUrl: string;
  imageOriginalUrl: string;
}

interface ProductImageAlt {
  main: string;
  translations: Translations;
}

interface ProductVideo {
  id: number;
  videoCoverId: number;
  url: boolean;
  embedHtml: string;
  providerName: string;
  title: string;
  image160pxUrl: string;
  image400pxUrl: string;
  image800pxUrl: string;
  image1500pxUrl: string;
  imageOriginalUrl: string;
}

interface CategoriesInfo {
  id: number;
  enabled: boolean;
}

interface AttributeValue {
  id: number;
  name: string;
  nameTranslated: Translations;
  value: string;
  valueTranslated: Translations;
  type: string;
  show: string;
}

interface ProductFile {
  id: number;
  name: string;
  description: string;
  size: number;
  adminUrl: string;
}

interface RelatedProducts {
  productIds: number[];
  relatedCategory: RelatedCategory;
}

interface RelatedCategory {
  enabled: boolean;
  categoryId: number;
  productCount: number;
}

interface Variation {
  id: number;
  combinationNumber: number;
  options: OptionValue[];
  sku: string;
  thumbnailUrl: string;
  imageUrl: string;
  smallThumbnailUrl: string;
  hdThumbnailUrl: string;
  originalImageUrl: string;
  quantity: number;
  unlimited: boolean;
  price: number;
  wholesalePrices: WholesalePrice[];
  weight: number;
  warningLimit: number;
  attributes: AttributeValue[];
  compareToPrice: number;
  minPurchaseQuantity: number;
  maxPurchaseQuantity: number;
  outOfStockVisibilityBehaviour: string;
}

interface OptionValue {
  name: string;
  nameTranslated: Translations;
  value: string;
  valueTranslated: Translations;
}

interface ProductOptionChoice {
  text: string;
  textTranslated: Translations;
  priceModifier: number;
  priceModifierType: string;
}

interface ProductDimensions {
  length: number;
  width: number;
  height: number;
}

interface SubscriptionSettings {
  subscriptionAllowed: boolean;
  oneTimePurchaseAllowed: boolean;
  oneTimePurchasePrice: number;
  oneTimePurchasePriceFormatted: string;
  oneTimePurchaseMarkup: number;
  oneTimePurchaseMarkupFormatted: string;
  oneTimePurchaseMarkupPercent: number;
  oneTimePurchaseMarkupPercentFormatted: string;
  recurringChargeSettings: RecurringChargeSettings;
}

interface RecurringChargeSettings {
  recurringInterval: string;
  recurringIntervalCount: number;
  subscriptionPriceWithSignUpFee: number;
  subscriptionPriceWithSignUpFeeFormatted: string;
  signUpFee: number;
  signUpFeeFormatted: string;
}

interface TaxInfo {
  taxable: boolean;
  defaultLocationIncludedTaxRate: number;
  enabledManualTaxes: number[];
  taxClassCode: string;
}

interface Product {
  id: number;
  sku: string;
  quantity: number;
  unlimited: boolean;
  inStock: boolean;
  name: string;
  nameTranslated: Translations;
  price: number;
  priceInProductList: number;
  defaultDisplayedPrice: number;
  defaultDisplayedPriceFormatted: string;
  costPrice: number;
  tax: TaxInfo;
  wholesalePrices: WholesalePrice[];
  lowestPrice: number;
  defaultDisplayedLowestPrice: number;
  defaultDisplayedLowestPriceFormatted: string;
  compareToPrice: number;
  compareToPriceFormatted: string;
  compareToPriceDiscount: number;
  compareToPriceDiscountFormatted: string;
  compareToPriceDiscountPercent: number;
  compareToPriceDiscountPercentFormatted: string;
  isShippingRequired: boolean;
  weight: number;
  url: string;
  imageUrl: string;
  autogeneratedSlug: string;
  customSlug: string;
  created: string;
  updated: string;
  createTimestamp: number;
  updateTimestamp: number;
  productClassId: number;
  enabled: boolean;
  options: ProductOption[];
  warningLimit: number;
  fixedShippingRateOnly: boolean;
  fixedShippingRate: number;
  shipping: ShippingSettings[];
  defaultCombinationId: number;
  originalImage: OriginalImage;
  description: string;
  descriptionTranslated: Translations[];
  galleryImages: GalleryImages[];
  media: ProductMedia;
  categoryIds: number[];
  categories: CategoriesInfo[];
  defaultCategoryId: number;
  seoTitle: string;
  seoTitleTranslated: string;
  seoDescription: string;
  seoDecriptionTranslated: string;
  favorites: FavoritesStats[];
  attributes: AttributeValue[];
  files: ProductFile[];
  relatedProducts: RelatedProducts;
  combinations: Variation[];
  dimensions: ProductDimensions;
  volume: number;
  showOnFrontpage: number;
  subscriptionSettings: SubscriptionSettings[];
  isSampleProduct: boolean;
  isGiftCard: boolean;
  discountsAllowed: boolean;
  externalReferenceId: string;
  outOfStockVisibilityBehaviour: string;
  minPurchaseQuantity: number;
  maxPurchaseQuantity: number;
  smallThumbnailUrl: string;
}

interface ProductSearchResult {
  total: number;
  count: number;
  offset: number;
  limit: number;
  items: Product[];
}

export type { Product, ProductSearchResult };
