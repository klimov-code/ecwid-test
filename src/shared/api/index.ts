import ky from 'ky';
import { CategorySearchResult } from '#types/category';
import { Product, ProductSearchResult } from '#types/product';
import { Profile } from '#types/profile';

const storeId = 58958138;
const token = 'public_7BxbJGWyDaZfSQqjVS5Ftr4jzXkS43UD';

const instance = ky.create({
  prefixUrl: `https://app.ecwid.com/api/v3/${storeId}`,
  headers: {
    Authorization: `Bearer ${token}`,
  },
});

async function getProductsByCategoryId(categories: string) {
  try {
    const response = await instance.get(`products?categories=${categories}`);
    const result = await response.json<ProductSearchResult>();

    return result;
  } catch (e) {
    console.error(e);

    throw Error(e as string);
  }
}

async function getProductById(id: string) {
  try {
    const response = await instance.get(`products/${id}`);
    const result = await response.json<Product>();

    return result;
  } catch (e) {
    console.error(e);

    throw Error(e as string);
  }
}

async function getCategoriesByParentId(parentId: string) {
  try {
    const response = await instance.get(
      `categories?parent=${parentId}&responseFields=items(id,parentId,name,thumbnailUrl,alt,autogeneratedSlug)`,
    );
    const result = await response.json<CategorySearchResult>();

    return result;
  } catch (e) {
    console.error(e);

    throw Error(e as string);
  }
}

async function getCategoryById(id: string) {
  try {
    const response = await instance.get(`categories/${id}`);
    const result = await response.json<CategorySearchResult>();

    return result;
  } catch (e) {
    console.error(e);

    throw Error(e as string);
  }
}

async function getCompanyProfile() {
  try {
    const response = await instance.get(`profile?responseFields=company,settings(storeName,storeDescription)`);
    const result = await response.json<Profile>();

    return result;
  } catch (e) {
    console.error(e);

    throw Error(e as string);
  }
}

export { getProductById, getCategoryById, getProductsByCategoryId, getCategoriesByParentId, getCompanyProfile };
export default instance;
